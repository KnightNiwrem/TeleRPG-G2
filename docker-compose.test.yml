services:
  postgres-test:
    image: postgres:17
    environment:
      - POSTGRES_DB=telerpg_test
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    ports:
      - "5433:5432"
    volumes:
      - postgres_test_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d telerpg_test"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis-test:
    image: redis:8
    ports:
      - "6380:6379"
    volumes:
      - redis_test_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  app-test:
    build:
      context: .
      dockerfile: Dockerfile.test
    environment:
      - NODE_ENV=test
      - TEST_DATABASE_URL=postgresql://postgres:password@postgres-test:5432/telerpg_test
      - DATABASE_URL=postgresql://postgres:password@postgres-test:5432/telerpg_test
      - REDIS_URL=redis://redis-test:6379
      - BOT_TOKEN=test_token
    depends_on:
      postgres-test:
        condition: service_healthy
      redis-test:
        condition: service_healthy
    command: ["bun", "test"]
    volumes:
      - ./src:/app/src
      - ./package.json:/app/package.json
      - ./bun.lock:/app/bun.lock
      - ./tsconfig.json:/app/tsconfig.json

volumes:
  postgres_test_data:
  redis_test_data: